CREATE DATABASE ecommerce_db;
USE ecommerce_db;

-- Customers table
CREATE TABLE customers (
    customer_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_name VARCHAR(100),
    email VARCHAR(100)
);

-- Products table
CREATE TABLE products (
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    product_name VARCHAR(100),
    price DECIMAL(10,2)
);

-- Orders table
CREATE TABLE orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Order_Items table (for products in orders)
CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);




-- Insert customers
INSERT INTO customers (customer_name, email) VALUES
('Alice', 'alice@example.com'),
('Bob', 'bob@example.com'),
('Charlie', 'charlie@example.com');

-- Insert products
INSERT INTO products (product_name, price) VALUES
('Laptop', 50000.00),
('Smartphone', 20000.00),
('Headphones', 3000.00),
('Keyboard', 1500.00);

-- Insert orders
INSERT INTO orders (customer_id, order_date, total_amount) VALUES
(1, '2025-06-01', 53000.00),
(2, '2025-06-02', 20000.00),
(3, '2025-06-03', 4500.00);

-- Insert order items
INSERT INTO order_items (order_id, product_id, quantity) VALUES
(1, 1, 1),
(1, 3, 1),
(2, 2, 1),
(3, 3, 1),
(3, 4, 1);

--SELECT,WHERE,ORDER BY,GROUP BY

SELECT * FROM customers ORDER BY customer_name;

SELECT product_name, price FROM products WHERE price > 5000;

SELECT customer_id, COUNT(order_id) AS total_orders
FROM orders
GROUP BY customer_id
ORDER BY total_orders DESC;

--INNER JOINS

SELECT o.order_id, c.customer_name, o.total_amount
FROM orders o
INNER JOIN customers c ON o.customer_id = c.customer_id;


--JOINS

SELECT o.order_id, c.customer_name, o.total_amount
FROM orders o
INNER JOIN customers c ON o.customer_id = c.customer_id;


--LEFT JOIN

SELECT c.customer_name, o.order_id
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id;


--RIGHT JOIN

SELECT o.order_id, c.customer_name
FROM orders o
RIGHT JOIN customers c ON o.customer_id = c.customer_id;


--SUBQUERIES

SELECT product_name, price
FROM products
WHERE price > (SELECT AVG(price) FROM products);


--AGGREGATE FUNCTIONS

SELECT SUM(total_amount) AS total_sales FROM orders;

SELECT AVG(price) AS average_price FROM products;


--CREATE VIEWS

CREATE VIEW customer_order_summary AS
SELECT c.customer_name, COUNT(o.order_id) AS total_orders, SUM(o.total_amount) AS total_spent
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_name;

SELECT * FROM customer_order_summary;


--NULL VALUES

SELECT customer_name, COALESCE(email, 'No Email') AS email_info FROM customers;
